
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVIDE EXPONENT LPAREN MINUS NUMBER PLUS RPAREN TIMES\n    expression : expression PLUS term\n               | expression MINUS term\n               | term\n    \n    term : term TIMES factor\n         | term DIVIDE factor\n         | factor\n    \n    factor : base EXPONENT factor\n           | base\n    \n    base : NUMBER\n         | LPAREN expression RPAREN\n    '
    
_lr_action_items = {'NUMBER':([0,6,7,8,9,10,11,],[5,5,5,5,5,5,5,]),'LPAREN':([0,6,7,8,9,10,11,],[6,6,6,6,6,6,6,]),'$end':([1,2,3,4,5,13,14,15,16,17,18,],[0,-3,-6,-8,-9,-1,-2,-4,-5,-7,-10,]),'PLUS':([1,2,3,4,5,12,13,14,15,16,17,18,],[7,-3,-6,-8,-9,7,-1,-2,-4,-5,-7,-10,]),'MINUS':([1,2,3,4,5,12,13,14,15,16,17,18,],[8,-3,-6,-8,-9,8,-1,-2,-4,-5,-7,-10,]),'RPAREN':([2,3,4,5,12,13,14,15,16,17,18,],[-3,-6,-8,-9,18,-1,-2,-4,-5,-7,-10,]),'TIMES':([2,3,4,5,13,14,15,16,17,18,],[9,-6,-8,-9,9,9,-4,-5,-7,-10,]),'DIVIDE':([2,3,4,5,13,14,15,16,17,18,],[10,-6,-8,-9,10,10,-4,-5,-7,-10,]),'EXPONENT':([4,5,18,],[11,-9,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,6,],[1,12,]),'term':([0,6,7,8,],[2,2,13,14,]),'factor':([0,6,7,8,9,10,11,],[3,3,3,3,15,16,17,]),'base':([0,6,7,8,9,10,11,],[4,4,4,4,4,4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS term','expression',3,'p_expression','parserr.py',6),
  ('expression -> expression MINUS term','expression',3,'p_expression','parserr.py',7),
  ('expression -> term','expression',1,'p_expression','parserr.py',8),
  ('term -> term TIMES factor','term',3,'p_term','parserr.py',20),
  ('term -> term DIVIDE factor','term',3,'p_term','parserr.py',21),
  ('term -> factor','term',1,'p_term','parserr.py',22),
  ('factor -> base EXPONENT factor','factor',3,'p_factor','parserr.py',34),
  ('factor -> base','factor',1,'p_factor','parserr.py',35),
  ('base -> NUMBER','base',1,'p_base','parserr.py',44),
  ('base -> LPAREN expression RPAREN','base',3,'p_base','parserr.py',45),
]
